{"version":3,"sources":["components/MenuAppBar/MenuAppBar.js","components/TotalDeathsCard/TotalDeathsCard.js","components/theme.js","components/TotalRecoveredCard/TotalRecoveredCard.js","components/ConfirmedCasesCard/ConfirmedCasesCard.js","components/TimeWeather/TimeWeatherCard.js","components/StackedBarGraph/StackedBarGraph.js","components/PieChart/PieChartCard.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","MenuAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","maxWidth","background","boxShadow","fontSize","heading_4","TotalDeathsCard","useState","jsonData","setJsonData","a","fetch","response","json","data","useEffect","fetchCovidData","Container","fixed","Card","CardContent","gutterBottom","deaths","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","border","TotalRecoveredCard","recovered","ConfirmedCasesCard","confirmed","display","borderRadius","padding","box","backgroundColor","currentTime","marginTop","currentDateStamp","sunnyIcon","nightIcon","TimeWeatherCard","date","Date","state","setState","setCurrentTime","currentDate","setCurrentDate","setInterval","getCurrentTime","time","day","toLocaleDateString","weekday","monthYear","month","year","getCurrentDate","weatherIcon","toLocaleString","hour","minute","hour12","startTimeDate","setHours","endTimeDate","Divider","value","size","renderNumbers","hourMarksWidth","StackedBarGraph","responseData","covidData","setCovidData","push","Country","country","Confirmed","Deaths","Recovered","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","coordinate","x","y","fill","heading_6","PieChartCard","name","parseInt","critical","nameKey","isAnimationActive","cx","cy","outerRadius","innerRadius","legendType","label","App","ThemeProvider","CssBaseline","Grid","container","direction","justify","alignItems","item","xs","lg","style","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.59d10c65.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 15\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            {/* <MenuIcon /> */}\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Covid-19 (Corona) Updates From India\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        background: 'linear-gradient(45deg, #f44336 30%, #ef9a9a 90%)',\r\n        //backgroundColor: '#f4511e',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        //border: '1px solid #bf360c'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (max-width:414px)': {\r\n            fontSize: '0.4rem'\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (max-width:414px)': {\r\n            fontSize: '4.5vw'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function TotalDeathsCard() {\r\n    const classes = useStyles();\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <HotelIcon/>\r\n                    <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                        Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" className={classes.heading_4}>\r\n                        {jsonData.deaths || \"...\"}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#37474f',\r\n    },\r\n    secondary: {\r\n      main: '#000',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#455a64',\r\n    },\r\n  }\r\n});\r\n\r\nexport default theme;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        background: 'linear-gradient(45deg, #8bc34a 30%, #c5e1a5 90%)',\r\n        //backgroundColor: '#00c853',\r\n        border: '1px solid #64dd17',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (max-width:414px)': {\r\n            fontSize: '0.4rem'\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (max-width:414px)': {\r\n            fontSize: '4.5vw'\r\n        }\r\n    }\r\n})\r\n);\r\n\r\nexport default function TotalRecoveredCard() {\r\n    const classes = useStyles();\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n    return (\r\n        <Container fixed>\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <AccessibilityNewIcon/>\r\n                <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                    Recovered\r\n                 </Typography>\r\n                <Typography variant=\"h4\" className={classes.heading_4}>\r\n                  {jsonData.recovered || \"...\"}\r\n        </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibleIcon from '@material-ui/icons/Accessible';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 200,\r\n        //backgroundColor: '#0277bd',\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #90caf9 90%)',\r\n        border: '1px solid #01579b',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (max-width:414px)': {\r\n            fontSize: '0.4rem'\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (max-width:414px)': {\r\n            fontSize: '4.5vw'\r\n        }\r\n    }\r\n    \r\n}));\r\n\r\nexport default function ConfirmedCasesCard() {\r\n    const classes = useStyles();\r\n\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                <AccessibleIcon/>\r\n                    <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                        Confirmed\r\n                </Typography>\r\n                <Typography variant=\"h4\" className={classes.heading_4}>\r\n                        {jsonData.confirmed || \"...\"}\r\n                </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container, Typography, Divider } from '@material-ui/core';\r\nimport Clock from 'react-clock';\r\nimport WbSunnyTwoToneIcon from '@material-ui/icons/WbSunnyTwoTone';\r\nimport NightsStayTwoToneIcon from '@material-ui/icons/NightsStayTwoTone';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        background: 'linear-gradient(45deg, #4fc3f7 30%, #e1f5fe 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        maxWidth: 600,\r\n        padding: '0px 30px 0px 50px',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        '@media (max-width:558px)': {\r\n            padding: '0px 0px'\r\n        }\r\n    },\r\n    box: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 50\r\n    },\r\n    currentTime: {\r\n        color: '#fff',\r\n        marginTop: 20,\r\n        marginBottom: 5,\r\n        '@media (max-width:558px)': {\r\n            fontSize: 17\r\n        }\r\n    },\r\n    currentDateStamp: {\r\n        color: '#fff',\r\n        marginTop: 5,\r\n        '@media (max-width:558px)': {\r\n            fontSize: 10\r\n        }\r\n    },\r\n    sunnyIcon: {\r\n        color: 'yellow',\r\n        marginTop: 24,\r\n        fontSize: '5vw',\r\n        '@media (max-width:558px)': {\r\n            fontSize: '7vw'\r\n        }\r\n    },\r\n    nightIcon: {\r\n        color: '#fff',\r\n        marginTop: 24,\r\n        fontSize: '5vw',\r\n        '@media (max-width:558px)': {\r\n            fontSize: '7vw'\r\n        }\r\n    }\r\n}));\r\n\r\nfunction TimeWeatherCard() {\r\n    const [state, setState] = useState([\r\n        { date: new Date() }\r\n    ]);\r\n    const [currentTime, setCurrentTime] = useState();\r\n    const [currentDate, setCurrentDate] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => setState({ date: new Date() },\r\n                getCurrentTime()),\r\n            1000\r\n        );\r\n        getCurrentTime();\r\n        getCurrentDate();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    function getCurrentTime() {\r\n        var time = new Date();\r\n        setCurrentTime(time.toLocaleString('en-US',\r\n            {\r\n                hour: '2-digit',\r\n                minute: 'numeric',\r\n                hour12: true\r\n            })\r\n        );\r\n    }\r\n\r\n    function getCurrentDate() {\r\n        var time = new Date();\r\n        var day = time.toLocaleDateString(\"en-us\", {\r\n            weekday: 'long'\r\n        })\r\n        var date = time.toLocaleDateString(\"en-us\", {\r\n            day: '2-digit'\r\n        })\r\n        var monthYear = time.toLocaleDateString(\"en-us\", {\r\n            month: 'long',\r\n            year: 'numeric'\r\n        })\r\n        setCurrentDate(day + \", \" + date + \" \" + monthYear);\r\n    }\r\n\r\n    function checkWeatherIconTime(){\r\n        var startTimeDate = new Date();\r\n        startTimeDate.setHours(6);\r\n        var endTimeDate = new Date();\r\n        endTimeDate.setHours(18,30);\r\n        return (currentTime > startTimeDate && currentTime < endTimeDate);\r\n    }\r\n\r\n    let weatherIcon;\r\n    if (checkWeatherIconTime) {\r\n        weatherIcon = <WbSunnyTwoToneIcon className={classes.sunnyIcon} />;\r\n    } else {\r\n        weatherIcon = <NightsStayTwoToneIcon className={classes.nightIcon} />;\r\n    }\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"elevation\">\r\n\r\n                <CardContent>\r\n                    {weatherIcon}\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Typography variant='h4' className={classes.currentTime}>\r\n                        {currentTime}\r\n                    </Typography>\r\n                    <Divider variant=\"middle\" />\r\n                    <Typography className={classes.currentDateStamp}>\r\n                        {currentDate}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Clock\r\n                        value={state.date}\r\n                        size={100}\r\n                        renderNumbers={true}\r\n                        hourMarksWidth={3}\r\n                        className={classes.box}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default TimeWeatherCard;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Container, Typography, Card, CardContent } from '@material-ui/core';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: '#fff',\r\n        background: 'linear-gradient(45deg, #bcaaa4 30%, #d7ccc8 90%)',\r\n        border: '1px solid #01579b',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        maxWidth: 600\r\n    }\r\n}));\r\n\r\nfunction StackedBarGraph() {\r\n    const responseData = [];\r\n    const classes = useStyles();\r\n    const [covidData, setCovidData] = useState();\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n    });\r\n\r\n    async function fetchCovidData() {\r\n        var response;\r\n        var data;\r\n        response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=USA\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data[0].country,\r\n            Confirmed: data[0].confirmed,\r\n            Deaths: data[0].deaths,\r\n            Recovered: data[0].recovered\r\n        })\r\n\r\n        response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=Italy\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data[0].country,\r\n            Confirmed: data[0].confirmed,\r\n            Deaths: data[0].deaths,\r\n            Recovered: data[0].recovered\r\n        })\r\n\r\n        response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=China\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data[0].country,\r\n            Confirmed: data[0].confirmed,\r\n            Deaths: data[0].deaths,\r\n            Recovered: data[0].recovered\r\n        })\r\n\r\n        response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=Spain\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data[0].country,\r\n            Confirmed: data[0].confirmed,\r\n            Deaths: data[0].deaths,\r\n            Recovered: data[0].recovered\r\n        })\r\n\r\n        response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=India\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data[0].country,\r\n            Confirmed: data[0].confirmed,\r\n            Deaths: data[0].deaths,\r\n            Recovered: data[0].recovered\r\n        })\r\n        setCovidData(responseData);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent >\r\n                    <Typography variant=\"h6\">\r\n                        Top countries vs India\r\n                     </Typography>\r\n                     {!covidData ? 'Loading...' : ''}\r\n                    <BarChart\r\n                        width={500}\r\n                        height={300}\r\n                        data={covidData}\r\n                        margin={{\r\n                            top: 20, right: 30, left: 20, bottom: 5,\r\n                        }}>\r\n                        <CartesianGrid strokeDasharray=\"5 5\" />\r\n                        <XAxis dataKey=\"Country\" />\r\n                        <YAxis />\r\n                        <Tooltip coordinate={{ x: 10, y: 5 }}/>\r\n                        <Legend />\r\n                        <Bar dataKey=\"Confirmed\" fill=\"#039be5\"/>\r\n                        <Bar dataKey=\"Deaths\" fill=\"#ef5350\" />\r\n                        <Bar dataKey=\"Recovered\" fill=\"#9ccc65\" />\r\n                    </BarChart>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nexport default StackedBarGraph;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport { PieChart, Pie, Legend, Tooltip } from 'recharts';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 600,\r\n        background: 'linear-gradient(45deg, #757575 30%, #9e9e9e 90%)',\r\n        border: '1px solid #01579b',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n    },\r\n    heading_6: {\r\n        '@media (max-width:414px)': {\r\n            fontSize: '4.5vw'\r\n        }\r\n    }\r\n\r\n}));\r\n\r\nexport default function PieChartCard() {\r\n    const classes = useStyles();\r\n    const responseData = [];\r\n    const [covidData, setCovidData] = useState();\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/totals?format=undefined\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        responseData.push({\r\n            name: 'Deaths', \r\n            value: parseInt(data[0].deaths), \r\n            fill: '#ff1744'\r\n        });\r\n        responseData.push({\r\n            name: 'Recovered', \r\n            value: parseInt(data[0].recovered), \r\n            fill: '#8bc34a'\r\n        });\r\n        responseData.push({\r\n            name: 'Confirmed', \r\n            value: parseInt(data[0].confirmed), \r\n            fill: '#2196f3'\r\n        });\r\n        responseData.push({\r\n            name: 'Critical', \r\n            value: parseInt(data[0].critical), \r\n            fill: '#f06292'\r\n        });\r\n        setCovidData(responseData);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h6\" className={classes.heading_6}>\r\n                        Global Report\r\n                </Typography>\r\n                    {!covidData ? 'Loading...' : ''}\r\n                    <PieChart width={400} height={300}>\r\n                        <Pie \r\n                        dataKey=\"value\" \r\n                        nameKey=\"name\"\r\n                        isAnimationActive={true} \r\n                        data={covidData} \r\n                        cx={230} \r\n                        cy={120}\r\n                        outerRadius={100} \r\n                        innerRadius={60} \r\n                        fill=\"#8884d8\" \r\n                        legendType='circle'\r\n                        label />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                    </PieChart>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport MenuAppBar from './components/MenuAppBar/MenuAppBar';\nimport TotalDeathsCard from './components/TotalDeathsCard/TotalDeathsCard';\nimport { Grid, Container} from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TotalRecoveredCard from './components/TotalRecoveredCard/TotalRecoveredCard';\nimport ConfirmedCasesCard from './components/ConfirmedCasesCard/ConfirmedCasesCard';\nimport TimeWeathercard from './components/TimeWeather/TimeWeatherCard';\nimport StackedBarGraph from './components/StackedBarGraph/StackedBarGraph';\nimport PieChartCard from './components/PieChart/PieChartCard';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <MenuAppBar />\n        <Container fixed>\n          <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n            <Grid item xs={12} lg={6}>\n              <TimeWeathercard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <TotalDeathsCard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <TotalRecoveredCard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <ConfirmedCasesCard />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n            <Grid item xs={12} lg={6}>\n              <PieChartCard />\n            </Grid>\n            <Grid item xs={12} lg={6}>\n              <StackedBarGraph />\n            </Grid>\n          </Grid>\n          <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n            <Grid item xs={12} lg={12} style={{fontSize:10, marginTop: 30, color: '#fff'}}>\n              👩‍💻Designed & Developed by Suraj Kamdi :: I🧡Open-Source :: (Real-Time updates from Rapid API)\n              ❗ Note: This dashboard is only for informational purpose. Please verify the data from government officail resource before publishing/posting.\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}