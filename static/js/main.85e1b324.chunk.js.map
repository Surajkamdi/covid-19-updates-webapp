{"version":3,"sources":["components/MenuAppBar/MenuAppBar.js","components/TotalDeathsCard/TotalDeathsCard.js","components/theme.js","components/TotalRecoveredCard/TotalRecoveredCard.js","components/ConfirmedCasesCard/ConfirmedCasesCard.js","components/TimeWeather/TimeWeatherCard.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","MenuAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","maxWidth","backgroundColor","border","fontSize","heading_4","TotalDeathsCard","useState","jsonData","setJsonData","a","fetch","response","json","data","useEffect","fetchCovidData","Container","fixed","Card","CardContent","gutterBottom","deaths","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","TotalRecoveredCard","recovered","ConfirmedCasesCard","confirmed","TimeWeatherCard","date","Date","state","setState","setInterval","value","size","renderNumbers","hourMarksWidth","App","ThemeProvider","CssBaseline","Grid","container","direction","justify","alignItems","item","xs","lg","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.85e1b324.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 15\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            {/* <MenuIcon /> */}\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Covid-19 (Corona) Updates From India\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        backgroundColor: '#f4511e',\r\n        border: '1px solid #bf360c'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (min-width:360px)': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (min-width:360px)': {\r\n            fontSize: '2rem'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function TotalDeathsCard() {\r\n    const classes = useStyles();\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData()\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <HotelIcon/>\r\n                    <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                        Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h4\">\r\n                        {jsonData.deaths}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#37474f',\r\n    },\r\n    secondary: {\r\n      main: '#000',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#455a64',\r\n    },\r\n  }\r\n});\r\n\r\nexport default theme;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        backgroundColor: '#00c853',\r\n        border: '1px solid #64dd17'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (min-width:360px)': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (min-width:360px)': {\r\n            fontSize: '2rem'\r\n        }\r\n    }\r\n})\r\n);\r\n\r\nexport default function TotalRecoveredCard() {\r\n    const classes = useStyles();\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData()\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n    return (\r\n        <Container fixed>\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <AccessibilityNewIcon/>\r\n                <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                    Recovered\r\n                 </Typography>\r\n                <Typography variant=\"h4\" className={classes.heading_4}>\r\n                  {jsonData.recovered}\r\n        </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibleIcon from '@material-ui/icons/Accessible';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 200,\r\n        backgroundColor: '#0277bd',\r\n        border: '1px solid #01579b',\r\n\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (min-width:360px)': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (min-width:360px)': {\r\n            fontSize: '2rem'\r\n        }\r\n    }\r\n    \r\n}));\r\n\r\nexport default function ConfirmedCasesCard() {\r\n    const classes = useStyles();\r\n\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData()\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                <AccessibleIcon/>\r\n                    <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                        Confirmed\r\n                </Typography>\r\n                <Typography variant=\"h4\" className={classes.heading_4}>\r\n                        {jsonData.confirmed}\r\n                </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container } from '@material-ui/core';\r\nimport Clock from 'react-clock';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#000',\r\n        maxWidth: 600,\r\n        backgroundColor: '#f5f5f5',\r\n        border: '1px solid #263238'\r\n    }\r\n}));\r\n\r\nfunction TimeWeatherCard() {\r\n\r\n    const [state, setState] = useState([\r\n        { date: new Date() }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => setState({ date: new Date() }),\r\n            1000\r\n        );\r\n\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Clock\r\n                        value={state.date}\r\n                        size={100}\r\n                        renderNumbers={true}\r\n                        hourMarksWidth={3}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default TimeWeatherCard;","import React from 'react';\nimport './App.css';\nimport MenuAppBar from './components/MenuAppBar/MenuAppBar';\nimport TotalDeathsCard from './components/TotalDeathsCard/TotalDeathsCard';\nimport { Grid, Container } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TotalRecoveredCard from './components/TotalRecoveredCard/TotalRecoveredCard';\nimport ConfirmedCasesCard from './components/ConfirmedCasesCard/ConfirmedCasesCard';\nimport TimeWeathercard from './components/TimeWeather/TimeWeatherCard';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <MenuAppBar />\n        <Container fixed>\n          <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n            <Grid item xs={12} lg={6}>\n              <TimeWeathercard/>\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <TotalDeathsCard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <TotalRecoveredCard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <ConfirmedCasesCard />\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}