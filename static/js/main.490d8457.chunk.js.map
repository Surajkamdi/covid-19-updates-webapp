{"version":3,"sources":["components/MenuAppBar/MenuAppBar.js","components/CurrentDate.js","components/TotalDeathsCard/TotalDeathsCard.js","components/theme.js","components/TotalRecoveredCard/TotalRecoveredCard.js","components/ConfirmedCasesCard/ConfirmedCasesCard.js","components/TimeWeather/TimeWeatherCard.js","components/StackedBarGraph/StackedBarGraph.js","components/PieChart/PieChartCard.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","MenuAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","date","Date","day","toLocaleString","month","currentDate","year","maxWidth","background","boxShadow","fontSize","heading_6","TotalDeathsCard","useState","totalDeaths","setTotalDeaths","fetchCovidData","a","fetch","response","json","data","deaths","total","useEffect","setInterval","Container","fixed","Card","CardContent","gutterBottom","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","border","TotalRecoveredCard","totalRecovered","setTotalRecovered","cases","recovered","ConfirmedCasesCard","totalConfirmedCases","setTotalConfirmedCases","display","borderRadius","padding","box","backgroundColor","currentTime","marginTop","currentDateStamp","sunnyIcon","nightIcon","TimeWeatherCard","state","setState","setCurrentTime","setCurrentDate","dayTime","setDayTime","getCurrentTime","time","toLocaleDateString","weekday","monthYear","getCurrentDate","currentDateTime","startTimeDate","setHours","endTimeDate","checkWeatherIconTime","weatherIcon","hour","minute","hour12","Divider","value","size","renderNumbers","hourMarksWidth","StackedBarGraph","responseData","covidData","setCovidData","push","Country","country","Confirmed","Deaths","Recovered","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","coordinate","x","y","fill","PieChartCard","name","parseInt","total_deaths","replace","total_recovered","total_cases","nameKey","isAnimationActive","cx","cy","outerRadius","innerRadius","legendType","label","App","ThemeProvider","CssBaseline","Grid","container","direction","justify","alignItems","item","xs","lg","style","role","Boolean","window","location","hostname","match","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.490d8457.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 15\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            {/* <MenuIcon /> */}\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Covid-19 (Corona) Updates From India\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","// Creating yyyy-mm-dd format date\r\nvar date = new Date();\r\nvar day = date.toLocaleString(\"en-us\", {\r\n    day: '2-digit'\r\n});\r\nvar month = date.toLocaleString(\"en-us\", {\r\n    month: '2-digit'\r\n});\r\nvar year = date.toLocaleString(\"en-us\", {\r\n    year: 'numeric'\r\n});\r\n\r\nconst currentDate = year + \"-\" + month + \"-\" + day;\r\n\r\nexport default currentDate;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport currentDate from '../CurrentDate';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        background: 'linear-gradient(45deg, #f44336 30%, #ef9a9a 90%)',\r\n        //backgroundColor: '#f4511e',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        //border: '1px solid #bf360c'\r\n    },\r\n    title: {\r\n        fontSize: 15,\r\n        color: '#fff',\r\n        '@media (max-width:414px)': {\r\n            fontSize: 10\r\n        }\r\n    },\r\n    heading_6: {\r\n        '@media (max-width:414px)': {\r\n            fontSize: 15\r\n        }\r\n    }\r\n});\r\n\r\nexport default function TotalDeathsCard() {\r\n    const classes = useStyles();\r\n    const [totalDeaths, setTotalDeaths] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000);\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setTotalDeaths(data.response[0].deaths.total);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <HotelIcon />\r\n                    <Typography className={classes.title} gutterBottom>\r\n                        Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.heading_6}>\r\n                        {totalDeaths || \"...\"}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#37474f',\r\n    },\r\n    secondary: {\r\n      main: '#000',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#455a64',\r\n    },\r\n  }\r\n});\r\n\r\nexport default theme;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\nimport currentDate from '../CurrentDate';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        background: 'linear-gradient(45deg, #8bc34a 30%, #c5e1a5 90%)',\r\n        //backgroundColor: '#00c853',\r\n        border: '1px solid #64dd17',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n    },\r\n    title: {\r\n        fontSize: 15,\r\n        color: '#fff',\r\n        '@media (max-width:414px)': {\r\n            fontSize: 10\r\n        }\r\n    },\r\n    heading_6: {\r\n        '@media (max-width:414px)': {\r\n            fontSize: 15\r\n        }\r\n    }\r\n});\r\n\r\nexport default function TotalRecoveredCard() {\r\n    const classes = useStyles();\r\n    const [totalRecovered, setTotalRecovered] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000);\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setTotalRecovered(data.response[0].cases.recovered);\r\n    }\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <AccessibilityNewIcon />\r\n                    <Typography className={classes.title} gutterBottom>\r\n                        Recovered\r\n                 </Typography>\r\n                    <Typography variant=\"h6\" className={classes.heading_6}>\r\n                        {totalRecovered || \"...\"}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibleIcon from '@material-ui/icons/Accessible';\r\nimport currentDate from '../CurrentDate';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 200,\r\n        //backgroundColor: '#0277bd',\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #90caf9 90%)',\r\n        border: '1px solid #01579b',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n\r\n    },\r\n    title: {\r\n        fontSize: 15,\r\n        color: '#fff',\r\n        '@media (max-width:414px)': {\r\n            fontSize: 10\r\n        }\r\n    },\r\n    heading_6: {\r\n        '@media (max-width:414px)': {\r\n            fontSize: 15\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport default function ConfirmedCasesCard() {\r\n    const classes = useStyles();\r\n\r\n    const [totalConfirmedCases, setTotalConfirmedCases] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000);\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setTotalConfirmedCases(data.response[0].cases.total);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <AccessibleIcon />\r\n                    <Typography className={classes.title} gutterBottom>\r\n                        Confirmed \r\n                </Typography>\r\n                    <Typography variant=\"h6\" className={classes.heading_6}>\r\n                        {totalConfirmedCases || \"...\"}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container, Typography, Divider } from '@material-ui/core';\r\nimport Clock from 'react-clock';\r\nimport WbSunnyTwoToneIcon from '@material-ui/icons/WbSunnyTwoTone';\r\nimport NightsStayTwoToneIcon from '@material-ui/icons/NightsStayTwoTone';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        background: 'linear-gradient(45deg, #4fc3f7 30%, #e1f5fe 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        maxWidth: 600,\r\n        padding: '0px 30px 0px 50px',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        '@media (max-width:558px)': {\r\n            padding: '0px 0px'\r\n        }\r\n    },\r\n    box: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 50\r\n    },\r\n    currentTime: {\r\n        color: '#fff',\r\n        marginTop: 20,\r\n        marginBottom: 5,\r\n        '@media (max-width:558px)': {\r\n            fontSize: 17\r\n        }\r\n    },\r\n    currentDateStamp: {\r\n        color: '#fff',\r\n        fontSize: 15,\r\n        marginTop: 5,\r\n        '@media (max-width:558px)': {\r\n            fontSize: 10\r\n        }\r\n    },\r\n    sunnyIcon: {\r\n        color: 'yellow',\r\n        marginTop: 24,\r\n        fontSize: '5vw',\r\n        '@media (max-width:558px)': {\r\n            fontSize: '7vw'\r\n        }\r\n    },\r\n    nightIcon: {\r\n        color: '#fff',\r\n        marginTop: 24,\r\n        fontSize: '5vw',\r\n        '@media (max-width:558px)': {\r\n            fontSize: '7vw'\r\n        }\r\n    }\r\n});\r\n\r\nfunction TimeWeatherCard() {\r\n    const [state, setState] = useState([\r\n        { date: new Date() }\r\n    ]);\r\n    const [currentTime, setCurrentTime] = useState();\r\n    const [currentDate, setCurrentDate] = useState();\r\n    const [dayTime, setDayTime] = useState('false');\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => setState({ date: new Date() },\r\n                getCurrentTime()),\r\n            1000\r\n        );\r\n        getCurrentTime();\r\n        getCurrentDate();\r\n        checkWeatherIconTime();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    function getCurrentTime() {\r\n        var time = new Date();\r\n        setCurrentTime(time.toLocaleString('en-US',\r\n            {\r\n                hour: '2-digit',\r\n                minute: 'numeric',\r\n                hour12: true\r\n            })\r\n        );\r\n    }\r\n\r\n    function getCurrentDate() {\r\n        var time = new Date();\r\n        var day = time.toLocaleDateString(\"en-us\", {\r\n            weekday: 'long'\r\n        })\r\n        var date = time.toLocaleDateString(\"en-us\", {\r\n            day: '2-digit'\r\n        })\r\n        var monthYear = time.toLocaleDateString(\"en-us\", {\r\n            month: 'long',\r\n            year: 'numeric'\r\n        })\r\n        setCurrentDate(day + \", \" + date + \" \" + monthYear);\r\n    }\r\n\r\n    function checkWeatherIconTime() {\r\n        var currentDateTime = new Date();\r\n        var startTimeDate = new Date();\r\n        startTimeDate.setHours(6);\r\n        var endTimeDate = new Date();\r\n        endTimeDate.setHours(18, 30);\r\n        if (currentDateTime > startTimeDate && currentDateTime < endTimeDate) {\r\n            setDayTime('true');\r\n        }\r\n    }\r\n\r\n    let weatherIcon;\r\n    if (dayTime === 'true') {\r\n        weatherIcon = <WbSunnyTwoToneIcon className={classes.sunnyIcon} />;\r\n    } else {\r\n        weatherIcon = <NightsStayTwoToneIcon className={classes.nightIcon} />;\r\n    }\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"elevation\">\r\n                <CardContent>\r\n                    {weatherIcon}\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Typography variant='h4' className={classes.currentTime}>\r\n                        {currentTime}\r\n                    </Typography>\r\n                    <Divider variant=\"middle\" />\r\n                    <Typography className={classes.currentDateStamp}>\r\n                        {currentDate}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Clock\r\n                        value={state.date}\r\n                        size={100}\r\n                        renderNumbers={true}\r\n                        hourMarksWidth={3}\r\n                        className={classes.box}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default TimeWeatherCard;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Container, Typography, Card, CardContent } from '@material-ui/core';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport currentDate from '../CurrentDate';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: '#fff',\r\n        background: 'linear-gradient(45deg, #bcaaa4 30%, #d7ccc8 90%)',\r\n        border: '1px solid #01579b',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        maxWidth: 600\r\n    }\r\n});\r\n\r\n/**\r\n * Stacked Bar Graph function.\r\n */\r\nfunction StackedBarGraph() {\r\n    const responseData = [];\r\n    const classes = useStyles();\r\n    const [covidData, setCovidData] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000);\r\n        fetchCovidData();\r\n    }, []);\r\n\r\n    async function fetchCovidData() {\r\n        var response;\r\n        var data;\r\n        response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=usa\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data.response[0].country,\r\n            Confirmed: data.response[0].cases.total,\r\n            Deaths: data.response[0].deaths.total,\r\n            Recovered: data.response[0].cases.recovered\r\n        })\r\n        response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=brazil\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data.response[0].country,\r\n            Confirmed: data.response[0].cases.total,\r\n            Deaths: data.response[0].deaths.total,\r\n            Recovered: data.response[0].cases.recovered\r\n        })\r\n\r\n        response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=russia\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data.response[0].country,\r\n            Confirmed: data.response[0].cases.total,\r\n            Deaths: data.response[0].deaths.total,\r\n            Recovered: data.response[0].cases.recovered\r\n        })\r\n\r\n        response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=peru\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data.response[0].country,\r\n            Confirmed: data.response[0].cases.total,\r\n            Deaths: data.response[0].deaths.total,\r\n            Recovered: data.response[0].cases.recovered\r\n        })\r\n\r\n        response = await fetch(\"https://covid-193.p.rapidapi.com/history?day=\" + currentDate + \"&country=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        data = await response.json();\r\n        responseData.push({\r\n            Country: data.response[0].country,\r\n            Confirmed: data.response[0].cases.total,\r\n            Deaths: data.response[0].deaths.total,\r\n            Recovered: data.response[0].cases.recovered\r\n        })\r\n        setCovidData(responseData);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent >\r\n                    <Typography variant=\"h6\">\r\n                        Top countries vs India\r\n                     </Typography>\r\n                    {!covidData ? 'Loading...' : ''}\r\n                    <BarChart\r\n                        width={500}\r\n                        height={300}\r\n                        data={covidData}\r\n                        margin={{\r\n                            top: 20, right: 30, left: 20, bottom: 5,\r\n                        }}>\r\n                        <CartesianGrid strokeDasharray=\"5 5\" />\r\n                        <XAxis dataKey=\"Country\" />\r\n                        <YAxis />\r\n                        <Tooltip coordinate={{ x: 10, y: 5 }} />\r\n                        <Legend />\r\n                        <Bar dataKey=\"Confirmed\" fill=\"#039be5\" />\r\n                        <Bar dataKey=\"Deaths\" fill=\"#ef5350\" />\r\n                        <Bar dataKey=\"Recovered\" fill=\"#9ccc65\" />\r\n                    </BarChart>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nexport default StackedBarGraph;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport { PieChart, Pie, Legend, Tooltip } from 'recharts';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 600,\r\n        background: 'linear-gradient(45deg, #757575 30%, #9e9e9e 90%)',\r\n        border: '1px solid #01579b',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n    },\r\n    heading_6: {\r\n        '@media (max-width:414px)': {\r\n            fontSize: '4.5vw'\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport default function PieChartCard() {\r\n    const classes = useStyles();\r\n    const responseData = [];\r\n    const [covidData, setCovidData] = useState();\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000\r\n        );\r\n    },[]);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        })\r\n        const data = await response.json();\r\n        responseData.push({\r\n            name: 'Deaths', \r\n            value: parseInt(data.total_deaths.replace(/,/g, '')), \r\n            fill: '#ff1744'\r\n        });\r\n        responseData.push({\r\n            name: 'Recovered', \r\n            value: parseInt(data.total_recovered.replace(/,/g, '')), \r\n            fill: '#8bc34a'\r\n        });\r\n        responseData.push({\r\n            name: 'Confirmed', \r\n            value: parseInt(data.total_cases.replace(/,/g, '')), \r\n            fill: '#2196f3'\r\n        });\r\n        // responseData.push({\r\n        //     name: 'New Cases', \r\n        //     value: parseInt(data.new_cases.replace(/,/g, '')), \r\n        //     fill: '#f06292'\r\n        // });\r\n        setCovidData(responseData);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h6\" className={classes.heading_6}>\r\n                        Global Report\r\n                </Typography>\r\n                    {!covidData ? 'Loading...' : ''}\r\n                    <PieChart width={400} height={300}>\r\n                        <Pie \r\n                        dataKey=\"value\" \r\n                        nameKey=\"name\"\r\n                        isAnimationActive={true} \r\n                        data={covidData} \r\n                        cx={250} \r\n                        cy={140}\r\n                        outerRadius={100} \r\n                        innerRadius={60} \r\n                        fill=\"#8884d8\" \r\n                        legendType='circle'\r\n                        label />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                    </PieChart>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MenuAppBar from './components/MenuAppBar/MenuAppBar';\r\nimport TotalDeathsCard from './components/TotalDeathsCard/TotalDeathsCard';\r\nimport { Grid, Container} from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './components/theme';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TotalRecoveredCard from './components/TotalRecoveredCard/TotalRecoveredCard';\r\nimport ConfirmedCasesCard from './components/ConfirmedCasesCard/ConfirmedCasesCard';\r\nimport TimeWeathercard from './components/TimeWeather/TimeWeatherCard';\r\nimport StackedBarGraph from './components/StackedBarGraph/StackedBarGraph';\r\nimport PieChartCard from './components/PieChart/PieChartCard';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <div className=\"App\">\r\n        <MenuAppBar />\r\n        <Container fixed>\r\n          <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n            <Grid item xs={12} lg={6}>\r\n              <TimeWeathercard />\r\n            </Grid>\r\n            <Grid item xs={4} lg={2}>\r\n              <TotalDeathsCard />\r\n            </Grid>\r\n            <Grid item xs={4} lg={2}>\r\n              <TotalRecoveredCard />\r\n            </Grid>\r\n            <Grid item xs={4} lg={2}>\r\n              <ConfirmedCasesCard />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n            <Grid item xs={12} lg={6}>\r\n              <PieChartCard />\r\n            </Grid>\r\n            <Grid item xs={12} lg={6}>\r\n              <StackedBarGraph />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n            <Grid item xs={12} lg={12} style={{fontSize:10, marginTop: 30, color: '#fff'}}>\r\n            <span role=\"img\" aria-label=\"mobile\">📱</span>Best Viewed in Desktop and Tablet. <span role=\"img\" aria-label=\"warning\">❗</span>Use Landscape mode on Android/iphone<br></br>\r\n            <span role=\"img\" aria-label=\"hacker-boy\">👩‍💻</span>Designed & Developed by Suraj Kamdi :: I<span role=\"img\" aria-label=\"heart\">🧡</span>Open-Source :: (Real-Time updates from Rapid API)\r\n            <span role=\"img\" aria-label=\"warning\">❗</span> Note: This dashboard is only for informational purpose. Please verify the data from government official resource before publishing/posting.\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactGA from 'react-ga';\r\n// import {Helmet} from \"react-helmet\";\r\n// import MetaTagComponent from './components/MetaTags';\r\n\r\nReactGA.initialize('UA-162326038-1');\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}