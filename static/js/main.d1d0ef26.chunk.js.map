{"version":3,"sources":["components/MenuAppBar/MenuAppBar.js","components/TotalDeathsCard/TotalDeathsCard.js","components/theme.js","components/TotalRecoveredCard/TotalRecoveredCard.js","components/ConfirmedCasesCard/ConfirmedCasesCard.js","components/TimeWeather/TimeWeatherCard.js","components/StackedBarGraph/StackedBarGraph.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","title","MenuAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","maxWidth","background","boxShadow","fontSize","heading_4","TotalDeathsCard","useState","jsonData","setJsonData","fetchCovidData","a","fetch","response","json","data","useEffect","setInterval","Container","fixed","Card","CardContent","gutterBottom","deaths","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","border","TotalRecoveredCard","recovered","ConfirmedCasesCard","confirmed","display","borderRadius","padding","box","backgroundColor","currentTime","marginTop","currentDateStamp","sunnyIcon","nightIcon","TimeWeatherCard","date","Date","state","setState","setCurrentTime","currentDate","setCurrentDate","getCurrentTime","time","day","toLocaleDateString","weekday","monthYear","month","year","getCurrentDate","weatherIcon","toLocaleString","hour","minute","hour12","startTimeDate","setHours","endTimeDate","Divider","value","size","renderNumbers","hourMarksWidth","StackedBarGraph","covidData","setCovidData","item","index","console","log","forEach","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","App","ThemeProvider","CssBaseline","Grid","container","direction","justify","alignItems","xs","lg","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d1d0ef26.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 15\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            {/* <MenuIcon /> */}\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Covid-19 (Corona) Updates From India\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        background: 'linear-gradient(45deg, #f44336 30%, #ef9a9a 90%)',\r\n        //backgroundColor: '#f4511e',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        //border: '1px solid #bf360c'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (max-width:360px)': {\r\n            fontSize: '0.6rem'\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (max-width:360px)': {\r\n            fontSize: '5vw'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function TotalDeathsCard() {\r\n    const classes = useStyles();\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000\r\n        );\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <HotelIcon/>\r\n                    <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                        Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" className={classes.heading_4}>\r\n                        {jsonData.deaths || \"...\"}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#37474f',\r\n    },\r\n    secondary: {\r\n      main: '#000',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#455a64',\r\n    },\r\n  }\r\n});\r\n\r\nexport default theme;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 300,\r\n        background: 'linear-gradient(45deg, #8bc34a 30%, #c5e1a5 90%)',\r\n        //backgroundColor: '#00c853',\r\n        border: '1px solid #64dd17',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (max-width:360px)': {\r\n            fontSize: '0.6rem'\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (max-width:360px)': {\r\n            fontSize: '5vw'\r\n        }\r\n    }\r\n})\r\n);\r\n\r\nexport default function TotalRecoveredCard() {\r\n    const classes = useStyles();\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000\r\n        );\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n    return (\r\n        <Container fixed>\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <AccessibilityNewIcon/>\r\n                <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                    Recovered\r\n                 </Typography>\r\n                <Typography variant=\"h4\" className={classes.heading_4}>\r\n                  {jsonData.recovered || \"...\"}\r\n        </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport AccessibleIcon from '@material-ui/icons/Accessible';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: '#fff',\r\n        maxWidth: 200,\r\n        //backgroundColor: '#0277bd',\r\n        background: 'linear-gradient(45deg, #2196f3 30%, #90caf9 90%)',\r\n        border: '1px solid #01579b',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n        color: '#fff',\r\n        '@media (max-width:360px)': {\r\n            fontSize: '0.6rem'\r\n        }\r\n    },\r\n    heading_4:{\r\n        '@media (max-width:360px)': {\r\n            fontSize: '5vw'\r\n        }\r\n    }\r\n    \r\n}));\r\n\r\nexport default function ConfirmedCasesCard() {\r\n    const classes = useStyles();\r\n\r\n    const [jsonData, setJsonData] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchCovidData();\r\n        setInterval(\r\n            () => fetchCovidData(),\r\n            600000\r\n        );\r\n    }, []);\r\n\r\n\r\n    async function fetchCovidData() {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=india\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setJsonData(data[0]);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                <AccessibleIcon/>\r\n                    <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                        Confirmed\r\n                </Typography>\r\n                <Typography variant=\"h4\" className={classes.heading_4}>\r\n                        {jsonData.confirmed || \"...\"}\r\n                </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Container, Typography, Divider } from '@material-ui/core';\r\nimport Clock from 'react-clock';\r\nimport WbSunnyTwoToneIcon from '@material-ui/icons/WbSunnyTwoTone';\r\nimport NightsStayTwoToneIcon from '@material-ui/icons/NightsStayTwoTone';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        background: 'linear-gradient(45deg, #4fc3f7 30%, #e1f5fe 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        maxWidth: 600,\r\n        padding: '0px 30px 0px 50px',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        '@media (max-width:558px)': {\r\n            padding: '0px 0px'\r\n        }\r\n    },\r\n    box: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 50\r\n    },\r\n    currentTime: {\r\n        color: '#fff',\r\n        marginTop: 20,\r\n        marginBottom: 5,\r\n        '@media (max-width:558px)': {\r\n            fontSize: 17\r\n        }\r\n    },\r\n    currentDateStamp: {\r\n        color: '#fff',\r\n        marginTop: 5,\r\n        '@media (max-width:558px)': {\r\n            fontSize: 10\r\n        }\r\n    },\r\n    sunnyIcon: {\r\n        color: 'yellow',\r\n        marginTop: 24,\r\n        fontSize: '5vw',\r\n        '@media (max-width:558px)': {\r\n            fontSize: '7vw'\r\n        }\r\n    },\r\n    nightIcon: {\r\n        color: '#fff',\r\n        marginTop: 24,\r\n        fontSize: '5vw',\r\n        '@media (max-width:558px)': {\r\n            fontSize: '7vw'\r\n        }\r\n    }\r\n}));\r\n\r\nfunction TimeWeatherCard() {\r\n    const [state, setState] = useState([\r\n        { date: new Date() }\r\n    ]);\r\n    const [currentTime, setCurrentTime] = useState();\r\n    const [currentDate, setCurrentDate] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(\r\n            () => setState({ date: new Date() },\r\n                getCurrentTime()),\r\n            1000\r\n        );\r\n        getCurrentTime();\r\n        getCurrentDate();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    function getCurrentTime() {\r\n        var time = new Date();\r\n        setCurrentTime(time.toLocaleString('en-US',\r\n            {\r\n                hour: '2-digit',\r\n                minute: 'numeric',\r\n                hour12: true\r\n            })\r\n        );\r\n    }\r\n\r\n    function getCurrentDate() {\r\n        var time = new Date();\r\n        var day = time.toLocaleDateString(\"en-us\", {\r\n            weekday: 'long'\r\n        })\r\n        var date = time.toLocaleDateString(\"en-us\", {\r\n            day: '2-digit'\r\n        })\r\n        var monthYear = time.toLocaleDateString(\"en-us\", {\r\n            month: 'long',\r\n            year: 'numeric'\r\n        })\r\n        setCurrentDate(day + \", \" + date + \" \" + monthYear);\r\n    }\r\n\r\n    function checkWeatherIconTime(){\r\n        var startTimeDate = new Date();\r\n        startTimeDate.setHours(6);\r\n        var endTimeDate = new Date();\r\n        endTimeDate.setHours(18,30);\r\n        return (currentTime > startTimeDate && currentTime < endTimeDate);\r\n    }\r\n\r\n    let weatherIcon;\r\n    if (checkWeatherIconTime) {\r\n        weatherIcon = <WbSunnyTwoToneIcon className={classes.sunnyIcon} />;\r\n    } else {\r\n        weatherIcon = <NightsStayTwoToneIcon className={classes.nightIcon} />;\r\n    }\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"elevation\">\r\n\r\n                <CardContent>\r\n                    {weatherIcon}\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Typography variant='h4' className={classes.currentTime}>\r\n                        {currentTime}\r\n                    </Typography>\r\n                    <Divider variant=\"middle\" />\r\n                    <Typography className={classes.currentDateStamp}>\r\n                        {currentDate}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Clock\r\n                        value={state.date}\r\n                        size={100}\r\n                        renderNumbers={true}\r\n                        hourMarksWidth={3}\r\n                        className={classes.box}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default TimeWeatherCard;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Container, Typography, Card, CardContent } from '@material-ui/core';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        color: '#fff',\r\n        background: 'linear-gradient(45deg, #26a69a 30%, #4db6ac 90%)',\r\n        border: '1px solid #00695c',\r\n        boxShadow: '0 3px 5px 2px rgba(96, 125, 139, .3)',\r\n        '& > *': {\r\n            maxWidth: 600\r\n        },\r\n    },\r\n}));\r\n\r\nconst data1 = [\r\n    {\r\n        name: 'US', Confirmed: 4000, Death: 2400, Recovered: 2400,\r\n    },\r\n    {\r\n        name: 'Italy', Confirmed: 3000, Death: 1398, Recovered: 2210,\r\n    },\r\n    {\r\n        name: 'China', Confirmed: 2000, Death: 9800, Recovered: 2290,\r\n    },\r\n    {\r\n        name: 'Spain', Confirmed: 2780, Death: 3908, Recovered: 2000,\r\n    },\r\n    {\r\n        name: 'Spain', Confirmed: 2780, Death: 3908, Recovered: 2000,\r\n    }\r\n    //     // {\r\n    //     //     name: 'Page F', confirmed: 2390, death: 3800, recovered: 2500,\r\n    //     // },\r\n    //     // {\r\n    //     //     name: 'Page G', confirmed: 3490, death: 4300, recovered: 2100,\r\n    //     // },\r\n];\r\n\r\nfunction StackedBarGraph() {\r\n    const classes = useStyles();\r\n    const [covidData, setCovidData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        var countries = [\"USA\", \"Italy\", \"China\", \"Spain\", \"India\"];\r\n        countries.forEach(fetchCovidData);\r\n        // setInterval(\r\n        //     () => fetchCovidData(\"India\"),\r\n        //     600000\r\n        // );\r\n    }, []);\r\n\r\n    async function fetchCovidData(item, index, covidData) {\r\n        const response = await fetch(\"https://covid-19-data.p.rapidapi.com/country?format=json&name=\" + item, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"6e3b4b3136mshf20c1a4a93f6f75p1038b3jsn86130b77b803\"\r\n            }\r\n        });\r\n        const data = await response.json();\r\n        setCovidData([\r\n            ...data,\r\n        ])\r\n        // covidData[index]={\r\n        //     Country: data[0].country,\r\n        //     Confirmed : data[0].confirmed,\r\n        //     Deaths: data[0].deaths,\r\n        //     Recovered: data[0].recovered\r\n        // }\r\n\r\n        console.log(covidData);\r\n    }\r\n\r\n    return (\r\n        <Container fixed>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h6\">\r\n                        Country Wise Data\r\n                </Typography>\r\n                    <BarChart\r\n                        width={500}\r\n                        height={300}\r\n                        data={covidData}\r\n                        margin={{\r\n                            top: 20, right: 30, left: 20, bottom: 5,\r\n                        }}>\r\n                        <CartesianGrid strokeDasharray=\"5 5\" />\r\n                        <XAxis dataKey=\"Country\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"Confirmed\" fill=\"#039be5\" />\r\n                        <Bar dataKey=\"Deaths\" fill=\"#ef5350\" />\r\n                        <Bar dataKey=\"Recovered\" fill=\"#9ccc65\" />\r\n                    </BarChart>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\nexport default StackedBarGraph;","import React from 'react';\nimport './App.css';\nimport MenuAppBar from './components/MenuAppBar/MenuAppBar';\nimport TotalDeathsCard from './components/TotalDeathsCard/TotalDeathsCard';\nimport { Grid, Container, GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/theme';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TotalRecoveredCard from './components/TotalRecoveredCard/TotalRecoveredCard';\nimport ConfirmedCasesCard from './components/ConfirmedCasesCard/ConfirmedCasesCard';\nimport TimeWeathercard from './components/TimeWeather/TimeWeatherCard';\nimport StackedBarGraph from './components/StackedBarGraph/StackedBarGraph';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <MenuAppBar />\n        <Container fixed>\n          <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n            <Grid item xs={12} lg={6}>\n              <TimeWeathercard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <TotalDeathsCard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <TotalRecoveredCard />\n            </Grid>\n            <Grid item xs={4} lg={2}>\n              <ConfirmedCasesCard />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n            <Grid item xs={12} lg={6}>\n            \"\"Some Text Here \"\"\n            </Grid>\n            <Grid item xs={12} lg={6}>\n             <StackedBarGraph/>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}